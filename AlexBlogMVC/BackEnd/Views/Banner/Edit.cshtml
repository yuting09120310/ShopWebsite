@model AlexBlogMVC.BackEnd.ViewModel.BannerViewModel

@{
    ViewData["Title"] = "Edit";
    var breadcrumbDict = new Dictionary<string, string[]> { { "編輯廣告", new string[] { "廣告管理", "廣告設定", "編輯廣告" } } };
}

<div class="card">
    <div class="card-header">
        <h5>編輯廣告</h5>
    </div>
    <form asp-action="Edit" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="card-body">
            <div class="row">
                <div class="col">
                    <input type="hidden" asp-for="CreateTime" />
                    <input type="hidden" asp-for="Creator" />
                    <input type="hidden" asp-for="BannerNum" />
                    <input type="hidden" asp-for="Ip" />

                    <div class="mb-3 row">
                        <label asp-for="EditorName" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9 col-form-label">
                            @Model.EditorName
                        </div>
                        <span asp-validation-for="EditorName" class="text-danger"></span>
                    </div>

                    <div class="mb-3 row">
                        <label asp-for="BannerTitle" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9 col-form-label">
                            <input asp-for="BannerTitle" class="form-control" />
                        </div>
                        <span asp-validation-for="BannerTitle" class="text-danger"></span>
                    </div>

                    <div class="mb-3 row">
                        <label asp-for="BannerDescription" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            <input asp-for="BannerDescription" class="form-control" />
                        </div>
                        <span asp-validation-for="BannerDescription" class="text-danger"></span>
                    </div>

                    <div class="mb-3 row">
                        <label asp-for="BannerContxt" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            @*<input asp-for="BannerContxt" class="form-control" type="password" autocomplete="off" />*@
                            <textarea asp-for="BannerContxt" class="form-control ckeditor"></textarea>
                        </div>
                        <span asp-validation-for="BannerContxt" class="text-danger"></span>
                    </div>


                    <div class="mb-3 row">
                        <label asp-for="BannerImg1" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            <input asp-for="BannerImg1" class="form-control" type="file" autocomplete="off" id="fileInput" />
                        </div>
                        <span asp-validation-for="BannerImg1" class="text-danger"></span>
                        
                        <br></br>

                        <div class="col-sm-3"></div>
                        <div class="col-sm-9">
                            <canvas id="previewCanvas" width="200" height="200"></canvas>
                        </div>
                    </div>
                    


                    <div class="mb-3 row">
                        <label asp-for="BannerPutTime" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            <input asp-for="BannerPutTime" class="form-control" type="date" autocomplete="off" />
                        </div>
                        <span asp-validation-for="BannerPutTime" class="text-danger"></span>
                    </div>

                    <div class="mb-3 row">
                        <label asp-for="BannerOffTime" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            <input asp-for="BannerOffTime" class="form-control" type="date" autocomplete="off" />
                        </div>
                        <span asp-validation-for="BannerOffTime" class="text-danger"></span>
                    </div>


                    <div class="mb-3 row">
                        <label asp-for="BannerPublish" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            <select asp-for="BannerPublish" class="form-control">
                                <option value="true">啟用</option>
                                <option value="false">關閉</option>
                            </select>
                        </div>
                        <span asp-validation-for="BannerPublish" class="text-danger"></span>
                    </div>

                </div>
            </div>
        </div>
        <div class="card-footer text-end">
            <div class="col-sm-9 offset-sm-3">
                <button class="btn btn-primary" type="submit">確定</button>
                <input class="btn btn-light" type="reset" value="重設">
            </div>
        </div>
    </form>
</div>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}


<script>
    const fileInput = document.getElementById("fileInput");
    const previewCanvas = document.getElementById("previewCanvas");
    const previewCtx = previewCanvas.getContext("2d");

    fileInput.addEventListener("change", (event) => {
        const file = event.target.files[0];

        if (file) {
            const reader = new FileReader();
            reader.readAsDataURL(file);

            reader.onload = () => {
                const img = new Image();
                img.src = reader.result;

                img.onload = () => {
                    previewCtx.drawImage(img, 0, 0, 200, 200);
                };
            };
        }
    });



    ClassicEditor
        .create(document.querySelector('.ckeditor'), {
            toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'],
        })
        .then(editor => {
            console.log(editor);
        })
        .catch(error => {
            console.error(error);
        });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
