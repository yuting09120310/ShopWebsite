@model IEnumerable<AlexBlogMVC.BackEnd.Models.Banner>

@{
    ViewData["Title"] = "Index";
    var breadcrumbDict = new Dictionary<string, string[]> { { "廣告列表", new string[] { "廣告管理", "廣告設定" } } };
}

<!-- 麵包屑及標題-->
@Html.Partial("_PageTitlePartial", breadcrumbDict)


<div class="container-fluid">
    <div class="row">
        <!-- Zero Configuration  Starts-->
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header pb-0 card-no-border">
                    <h3>廣告列表</h3>
                    <hr />
                    @*                    <span>DataTables has most features enabled by default, so all you need to do to use it with your own tables is to call the construction function:<code>$().DataTable();</code>.</span><span>Searching, ordering and paging goodness will be immediately added to the table, as shown in this example.</span>
                    *@
                </div>
                <div class="card-body">


                    <div class="table-responsive">
                        <table class="display" id="datatable">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.BannerNum)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.BannerTitle)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.BannerDescription)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.BannerImgUrl)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.BannerPutTime)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.CreateTime)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EditTime)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.BannerOffTime)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.BannerPublish)
                                    </th>
                                    <th>處理</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BannerNum)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BannerTitle)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BannerDescription)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BannerImgUrl)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BannerPutTime)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CreateTime)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EditTime)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BannerOffTime)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BannerPublish)
                                        </td>
                                        <td>
                                            <ul class="action">
                                                <li class="edit"> <a asp-action="Edit" asp-route-id="@item.BannerNum"><i class="icon-pencil-alt"></i></a></li>
                                                <li class="delete"><a asp-action="Delete" asp-route-id="@item.BannerNum"><i class="icon-trash"></i></a></li>
                                            </ul>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    //設定中的"_XXXX_"是套件的數據替換, 可以不帶入, 另外, 名稱不同的話會被當作純文字顯示
    document.addEventListener("DOMContentLoaded", function (event) {
        $('#datatable').DataTable({
            "language": {
                "processing": "處理中...",
                "loadingRecords": "載入中...",
                "lengthMenu": "顯示 _MENU_ 項結果",
                "zeroRecords": "沒有符合的結果",
                "info": "顯示第 _START_ 至 _END_ 項結果，共 _TOTAL_ 項",
                "infoEmpty": "顯示第 0 至 0 項結果，共 0 項",
                "infoFiltered": "(從 _MAX_ 項結果中過濾)",
                "infoPostFix": "",
                "search": "搜尋:",
                "paginate": {
                    "first": "第一頁",
                    "previous": "上一頁",
                    "next": "下一頁",
                    "last": "最後一頁"
                },
                "aria": {
                    "sortAscending": ": 升冪排列",
                    "sortDescending": ": 降冪排列"
                }
            }
        });
    });
</script>