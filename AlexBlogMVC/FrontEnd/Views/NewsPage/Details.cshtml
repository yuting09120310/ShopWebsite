@model AlexBlogMVC.FrontEnd.ViewModel.NewsPageViewModel

@{
    var breadcrumbDict = new Dictionary<string, string[]> { { "最新消息", new string[] { "Alex前台", "最新消息", Model.NewsTypeName } } };
    ViewData["Title"] = @Model.Title;
}

@Html.Partial("_FrontEndPageTitlePartial", breadcrumbDict)

<section class="news-detail-section">
    <div class="auto-container">

        <div class="content-container">
            <h2 class="post-title">@Model.Title</h2>
            <div class="info"><a href="#" class="cat-name">@Model.NewsTypeName</a>     <span class="date">@Model.CreateTime</span></div>

            <div class="content">

                @Html.Raw(Model.contxt)

            </div>
        </div>

        <!--Post Tags-->
        <div class="post-tags">
            <strong>TAGS : </strong>
            @{
                string[] Tags = Model.Tag.Split(',');
                foreach (string tag in Tags)
                {
                    <a asp-action="Index" asp-controller="NewsPage" asp-route-searchValue="@tag">@tag</a>
                }
            }
        </div>

        <!--Comments Container-->
        <div class="comments-container">
            <div class="big-title">@Model.getCommants.Count() 則留言</div>
            <div class="comments-area">

                <!--Comment Box-->
                @{
                    foreach (UserComment item in Model.getCommants)
                    {
                        <div class="comment-box">
                            <div class="inner-box">
                                <figure class="comment-thumb">
                                    @{
                                        Random random = new Random();
                                        int randomNumber = random.Next();
                                        <img src="https://picsum.photos/80/80?random= @randomNumber" alt="">
                                    }
                                </figure>
                                <h3>@item.UserName</h3>
                                <div class="time">@item.Email</div>
                                <div class="text">@item.Message</div>
                            </div>
                        </div>
                        <hr></hr>
                    }
                }
            </div>

            <div class="big-title">留下評論</div>
            <!--Reply Form-->
            <div class="reply-form">
                <div class="row clearfix">
                    <div class="form-group col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <input type="text" placeholder="姓名" name="postComment.UserName" id="UserName">
                    </div>
                    <div class="form-group col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <input type="email" placeholder="信箱" name="postComment.Email" id="Email">
                    </div>
                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <textarea placeholder="內容.." name="postComment.Message" id="Message"></textarea>
                    </div>

                    <div class="form-group text-center col-lg-12 col-md-6 col-sm-12 col-xs-12">
                        <div class="padd-top-20"><button type="submit" class="theme-btn sendbtn">送出</button></div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

<script>
        var sendbtn = document.querySelector('.sendbtn')
        sendbtn.addEventListener("click", (event) => {

            var UserName = document.querySelector('#UserName').value;
            var Email = document.querySelector('#Email').value;
            var Message = document.querySelector('#Message').value;

            if(UserName.length == 0 && UserName.length == 0 || UserName.length == 0){
                alert("資料沒填齊全");
                return;
            }

            axios.post('/NewsPage/Comments', { "UserName": UserName, "Email": Email, "Message": Message, "NewsId":@Model.NewsId })
                .then(function (response) {

                    // 將回應的資料插入到模態對話框中
                    var content = response.data;
                    var obj = JSON.parse(content);
                    $('.modal-body').html(`
                                <p>訂單編號  : ${obj.OrderId}</p>
                                <p>訂購人姓名: ${obj.CustomerName}</p>
                                <p>寄送地址  : ${obj.OrderDate}</p>
                                <p>訂單金額  : ${obj.TotalAmount}</p>
                                <p>訂單狀態  : ${obj.OrderStatus}</p>
                    `);

                    // 開啟模態對話框
                    var modal = document.getElementById('exampleModal');
                    modal.classList.add('show');
                    modal.style.display = 'block';
                })
                .catch(function (error) {
                    // 處理錯誤
                    console.log(error);
                });
        
        });

</script>

